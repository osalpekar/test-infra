name: Test Build Linux Conda

on:
  push:
    paths:
      - .github/actions/setup-binary-builds/action.yml
      - .github/workflows/test_build_conda_linux.yml
      - .github/workflows/build_conda_linux.yml
      - .github/workflows/generate_binary_build_matrix.yml
  workflow_dispatch:

jobs:
  generate-matrix:
    uses: ./.github/workflows/generate_binary_build_matrix.yml
    with:
      package-type: conda
      os: linux
      test-infra-repository: ${{ github.repository }}
      test-infra-ref: ${{ github.ref }}
  test:
    needs: generate-matrix
    strategy:
      fail-fast: false
      matrix:
        include:
          - repository: pytorch/audio
            pre-script: packaging/pre_build_script.sh
            post-script: packaging/post_build_script.sh
            conda-package-directory: packaging/torchaudio
            #- repository: pytorch/vision
            #- pre-script: ""
            #- post-script: ""
            #- conda-package-directory: packaging/torchvision
            #- repository: pytorch/text
            #- pre-script: ""
            #- post-script: ""
            #- conda-package-directory: packaging/torchtext
    name: ${{ matrix.repository }}
    uses: ./.github/workflows/build_conda_linux.yml
    with:
      conda-package-directory: ${{ matrix.conda-package-directory }}
      repository: ${{ matrix.repository }}
      ref: nightly
      test-infra-repository: ${{ github.repository }}
      test-infra-ref: ${{ github.ref }}
      build-matrix: {"include": [{"python_version": "3.7", "gpu_arch_type": "cpu", "gpu_arch_version": "", "desired_cuda": "cpu", "container_image": "pytorch/conda-builder:cpu", "package_type": "conda", "build_name": "conda-py3_7-cpu", "validation_runner": "ubuntu-20.04", "channel": "nightly", "installation": "conda install pytorch torchvision torchaudio cpuonly -c pytorch-nightly"}]} # ${{ needs.generate-matrix.outputs.matrix }}
      pre-script: ${{ matrix.pre-script }}
      post-script: ${{ matrix.post-script }}
